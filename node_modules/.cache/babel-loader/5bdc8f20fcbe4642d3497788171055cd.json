{"ast":null,"code":"import { getToken } from \"../auth\";\nconst aToken = getToken();\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api/';\nexport const meUserData = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${aToken}`\n      }\n    });\n    const meData = await response.json(); // console.log('me Data', meData)\n\n    return meData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const userRoutines = async username => {\n  try {\n    const response = await fetch(`${BASE_URL}users/${username}/routines`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const userData = await response.json();\n    return userData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const allActivities = async () => {\n  try {\n    const response = fetch(`${BASE_URL}activities`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const activitiesData = await (await response).json();\n    return activitiesData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const createActivity = async activity => {\n  try {\n    const response = await fetch(`${BASE_URL}activities`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${aToken}`\n      },\n      body: JSON.stringify(activity)\n    });\n    const activityData = await response.json();\n    return activityData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const allRoutines = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}routines`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const allRotuinesData = await response.json();\n    return allRotuinesData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const createRoutines = async routine => {\n  try {\n    const response = await fetch(`${BASE_URL}routines`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${aToken}`\n      },\n      body: JSON.stringify(routine)\n    });\n    const createRoutinesData = await response.json();\n    return createRoutinesData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const updateRoutine = async (name, goal, routineId) => {\n  let fields = {};\n\n  try {\n    const response = await fetch(`${BASE_URL}routines/${routineId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(payload)\n    });\n  } catch (error) {\n    console.error(error); //alert(error)\n  }\n};","map":{"version":3,"sources":["/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/api/index.js"],"names":["getToken","aToken","BASE_URL","meUserData","response","fetch","headers","meData","json","error","console","userRoutines","username","userData","allActivities","activitiesData","createActivity","activity","method","body","JSON","stringify","activityData","allRoutines","allRotuinesData","createRoutines","routine","Authorization","createRoutinesData","updateRoutine","name","goal","routineId","fields","token","payload"],"mappings":"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","sourcesContent":["import { getToken} from \"../auth\";\nconst aToken = getToken();\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api/' ;\n\nexport const meUserData = async () => {\n\n    try{\n        const response = await fetch(`${BASE_URL}users/me`,{\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${aToken}`\n              }\n        });\n\n        const meData = await response.json();\n\n        // console.log('me Data', meData)\n\n        return meData\n\n    }catch (error){\n        console.error(error);\n    }\n\n}\n\nexport const userRoutines = async (username) => {\n    try{\n        const response = await fetch (`${BASE_URL}users/${username}/routines`, {\n            headers: {\n                'Content-Type': 'application/json',\n              }\n        });\n\n        const userData = await response.json();\n\n        return userData\n        \n    }catch (error){\n        console.error(error)\n    }\n}\n\nexport const allActivities = async () => {\n\n    try{\n\n        const response = fetch(`${BASE_URL}activities`, {\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          });\n\n          const activitiesData = await (await response).json();\n          return activitiesData\n\n    }catch (error){\n        console.error(error)\n    }\n\n\n}\n\nexport const createActivity = async (activity) => {\n    try{\n        const response = await fetch(`${BASE_URL}activities`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${aToken}`\n            },\n            body: JSON.stringify(activity) \n            \n        });\n        const activityData = await response.json();\n\n        return activityData\n\n    }catch (error){\n        console.error(error)\n    }\n}\n\nexport const allRoutines = async () => {\n    try{\n\n        const response = await fetch(`${BASE_URL}routines`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n              }\n        });\n\n        const allRotuinesData = await response.json();\n\n        return allRotuinesData\n\n    }catch (error){\n        console.error(error);\n    }\n}\n\nexport const createRoutines = async (routine) => {\n    try{\n\n        const response = await fetch(`${BASE_URL}routines`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${aToken}`,\n            },\n            body: JSON.stringify(routine),\n          });\n          const createRoutinesData = await response.json();\n      \n          return createRoutinesData;\n\n    }catch (error){\n        console.error(error)\n    }\n}\n\n\n\nexport const updateRoutine = async (name, goal, routineId) => {\n    let fields = {}\n\n    try{\n        const response = await fetch(`${BASE_URL}routines/${routineId}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify(payload),\n        });\n    }catch(error){\n        console.error(error)\n        //alert(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}