{"ast":null,"code":"import { getToken } from \"../auth\";\nconst aToken = getToken();\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api/';\nexport const meUserData = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${aToken}`\n      }\n    });\n    const meData = await response.json(); // console.log('me Data', meData)\n\n    return meData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const userRoutines = async username => {\n  try {\n    const response = await fetch(`${BASE_URL}users/${username}/routines`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const userData = await response.json();\n    return userData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const allActivities = async () => {\n  try {\n    const response = fetch(`${BASE_URL}activities`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const activitiesData = await (await response).json();\n    return activitiesData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const createActivity = async activity => {\n  try {\n    const response = await fetch(`${BASE_URL}activities`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${aToken}`\n      },\n      body: JSON.stringify(activity)\n    });\n    const activityData = await response.json();\n    return activityData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const allRoutines = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}routines`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const allRotuinesData = await response.json();\n    return allRotuinesData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const createRoutines = async routine => {\n  try {\n    const response = await fetch(`${BASE_URL}routines`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${aToken}`\n      },\n      body: JSON.stringify(routine)\n    });\n    const createRoutinesData = await response.json();\n    return createRoutinesData;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const updateRoutine = async (name, goal, routineId) => {\n  let fields = {};\n  let editName = prompt('Name:', name);\n  let editGoal = prompt('Goal:', goal);\n\n  if (editName) {\n    fields.name = editName;\n  }\n\n  if (editGoal) {\n    fields.goal = editGoal;\n  }\n\n  try {\n    const response = await fetch(`${BASE_URL}routines/${routineId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${aToken}`\n      },\n      body: JSON.stringify(fields)\n    });\n  } catch (error) {\n    console.error(error);\n    alert(error);\n  }\n};\nexport const deleteRoutine = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}routines/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${aToken}`\n      }\n    });\n  } catch (error) {\n    console.error(error);\n    alert(error);\n  }\n};\nexport const addActivityToRoutine = async (routineId, activityIdR, countR, durationR) => {\n  try {\n    const response = await fetch(`${BASE_URL}routines/${routineId}/activities`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        activityId: activityIdR,\n        count: countR,\n        duration: durationR\n      })\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const updateRoutineActivity = async (id, count, duration) => {\n  let fields = {};\n  let newCount = prompt('Count', count);\n  let newDuration = prompt('Duration', duration);\n\n  if (newCount) {\n    fields.count = newCount;\n  }\n\n  if (newDuration) {\n    fields.duration = newDuration;\n  }\n\n  try {\n    const response = await fetch(`${BASE_URL}/routine_activities/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${aToken}`\n      },\n      body: JSON.stringify(fields)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    alert(error);\n  }\n};\nexport const deleteRoutineActivity = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/routine_activities/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${aToken}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error);\n  }\n};","map":{"version":3,"sources":["/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/api/index.js"],"names":["getToken","aToken","BASE_URL","meUserData","response","fetch","headers","meData","json","error","console","userRoutines","username","userData","allActivities","activitiesData","createActivity","activity","method","body","JSON","stringify","activityData","allRoutines","allRotuinesData","createRoutines","routine","Authorization","createRoutinesData","updateRoutine","name","goal","routineId","fields","editName","prompt","editGoal","alert","deleteRoutine","id","addActivityToRoutine","activityIdR","countR","durationR","activityId","count","duration","data","updateRoutineActivity","newCount","newDuration","deleteRoutineActivity"],"mappings":"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","sourcesContent":["import { getToken} from \"../auth\";\nconst aToken = getToken();\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api/' ;\n\nexport const meUserData = async () => {\n\n    try{\n        const response = await fetch(`${BASE_URL}users/me`,{\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${aToken}`\n              }\n        });\n\n        const meData = await response.json();\n\n        // console.log('me Data', meData)\n\n        return meData\n\n    }catch (error){\n        console.error(error);\n    }\n\n}\n\nexport const userRoutines = async (username) => {\n    try{\n        const response = await fetch (`${BASE_URL}users/${username}/routines`, {\n            headers: {\n                'Content-Type': 'application/json',\n              }\n        });\n\n        const userData = await response.json();\n\n        return userData\n        \n    }catch (error){\n        console.error(error)\n    }\n}\n\nexport const allActivities = async () => {\n\n    try{\n\n        const response = fetch(`${BASE_URL}activities`, {\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          });\n\n          const activitiesData = await (await response).json();\n          return activitiesData\n\n    }catch (error){\n        console.error(error)\n    }\n\n\n}\n\nexport const createActivity = async (activity) => {\n    try{\n        const response = await fetch(`${BASE_URL}activities`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${aToken}`\n            },\n            body: JSON.stringify(activity) \n            \n        });\n        const activityData = await response.json();\n\n        return activityData\n\n    }catch (error){\n        console.error(error)\n    }\n}\n\nexport const allRoutines = async () => {\n    try{\n\n        const response = await fetch(`${BASE_URL}routines`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n              }\n        });\n\n        const allRotuinesData = await response.json();\n\n        return allRotuinesData\n\n    }catch (error){\n        console.error(error);\n    }\n}\n\nexport const createRoutines = async (routine) => {\n    try{\n\n        const response = await fetch(`${BASE_URL}routines`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${aToken}`,\n            },\n            body: JSON.stringify(routine),\n          });\n          const createRoutinesData = await response.json();\n      \n          return createRoutinesData;\n\n    }catch (error){\n        console.error(error)\n    }\n}\n\n\n\nexport const updateRoutine = async (name, goal, routineId) => {\n    let fields = {}\n\n    let editName = prompt('Name:', name);\n    \n    let editGoal = prompt('Goal:', goal);\n\n    if (editName){\n        fields.name = editName;\n    }\n    if (editGoal){\n        fields.goal = editGoal;\n    }\n\n    try{\n        const response = await fetch(`${BASE_URL}routines/${routineId}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${aToken}`,\n            },\n            body: JSON.stringify(fields),\n        });\n    }catch(error){\n        console.error(error)\n        alert(error)\n    }\n}\n\nexport const deleteRoutine = async (id) => {\n    try {\n        const response = await fetch (`${BASE_URL}routines/${id}`, {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${aToken}`,\n            },\n        });\n\n    } catch(error){\n        console.error(error);\n        alert(error);\n    }\n}\n\nexport const addActivityToRoutine = async ( routineId, activityIdR, countR, durationR) =>{\n    \n    try{\n\n        const response = await fetch (`${BASE_URL}routines/${routineId}/activities`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                activityId: activityIdR,\n                count: countR,\n                duration: durationR,\n              })\n        });\n\n        const data = await response.json();\n        return data;\n    }catch(error){\n        console.error(error);\n    }\n\n}\n\n\nexport const updateRoutineActivity = async (id, count, duration) => {\n    let fields = {};\n    let newCount = prompt('Count', count);\n    let newDuration = prompt('Duration', duration);\n   \n    if (newCount){\n        fields.count = newCount;\n    }\n    if (newDuration){\n        fields.duration = newDuration;\n    }\n\n    try{\n\n        const response = await fetch(`${BASE_URL}/routine_activities/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${aToken}`,\n            },\n            body: JSON.stringify(fields),\n        });\n\n        const data = await response.json();\n        return data\n    } catch (error){\n        console.error(error);\n        alert(error);\n    }\n}\n\nexport const deleteRoutineActivity = async (id) => {\n\n    try {\n        const response = await fetch(`${BASE_URL}/routine_activities/${id}`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${aToken}`,\n          },\n        });\n        const data = await response.json();\n        return data;\n      } catch (error) {\n        alert(error);\n      }\n\n}"]},"metadata":{},"sourceType":"module"}