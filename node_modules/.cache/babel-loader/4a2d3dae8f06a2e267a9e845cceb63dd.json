{"ast":null,"code":"var _jsxFileName = \"/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/components/myroutines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { userRoutines, updateRoutine, deleteRoutine, addActivityToRoutine, updateRoutineActivity, deleteRoutineActivity } from '../api';\nimport EditRoutine from './editroutine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = props => {\n  _s();\n\n  const [theUserRoutines, setTheUserRoutines] = useState([]);\n  const [activityId, setActivityId] = useState();\n  const [durationCount, setDurationCount] = useState();\n  const [routineId, setRoutineId] = useState(); // const [showEdit, setShowEdit] = useState(false);\n  // const [hack, setHack] = useState(1)\n\n  const {\n    loggedIn,\n    currentUser,\n    activities\n  } = props; // console.log('trap',theUserRoutines)\n\n  console.log('dddd', activityId); // const makeEdit = async () => {\n  //     setShowEdit(true)\n  // }\n\n  const handleUpdate = async (name, goal, id) => {\n    try {\n      const routines = await updateRoutine(name, goal, id);\n      window.location.reload();\n    } catch (error) {\n      console.error;\n    }\n  };\n\n  const handleDeleteRoutine = async id => {\n    try {\n      const routines = await deleteRoutine(id);\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleActivityAdd = async event => {\n    event.preventDefault();\n    const {\n      duration,\n      count\n    } = durationCount;\n\n    try {\n      const response = await addActivityToRoutine(routineId, activityId, count, duration);\n\n      if (!response.id) {\n        return alert('Error');\n      }\n\n      setRoutineId(null);\n      setDurationCount(null);\n      setActivityId(null);\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleActivityUpdate = async (routineId, count, duration) => {\n    try {\n      const routines = await updateRoutineActivity(routineId, count, duration);\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleActivityDelete = async id => {\n    try {\n      const activity = await deleteRoutineActivity(id);\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getUserRoutines = async () => {\n    if (!currentUser || !activities) {\n      return;\n    }\n\n    try {\n      const routines = await userRoutines(currentUser); // console.log('hhhh', routines)\n\n      setTheUserRoutines(routines); // console.log('pop',theUserRoutines)\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(getUserRoutines, [currentUser, activities]);\n\n  if (!loggedIn) {\n    alert('Log in to view My Routines');\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"myroutinestitle\",\n        children: \"My Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myroutines\",\n        children: theUserRoutines ? theUserRoutines.map((routine, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"myroutinecell\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: routine.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: routine.goal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"edit\",\n              onClick: () => handleUpdate(routine.name, routine.goal, routine.id),\n              children: \"Edit Routine Name or Goal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"delete\",\n              onClick: () => handleDeleteRoutine(routine.id),\n              children: \"Delete Routine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), routine.activities[0] ? routine.activities.map((activity, index) => {\n              return /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"details\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Activity: \", activity.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 38\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"ID: \", activity.routineActivityId]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Description: \", activity.description, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" Duration: \", activity.duration]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 37\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Count: \", activity.count, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleActivityUpdate(activity.routineActivityId, activity.duration, activity.count),\n                  children: \"Update Duration or Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleActivityDelete(activity.routineActivityId),\n                  children: \"Delete Routine Activity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 33\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No activities for this routine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleActivityAdd,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Add Routine Activity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"Activities\",\n                id: \"selectactivity\",\n                value: activityId,\n                onChange: event => {\n                  setRoutineId(routine.id);\n                  setActivityId(event.target.value);\n                  return;\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"null\",\n                  children: \"Select Activity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 25\n                }, this), activities.map((activity, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: activity.id,\n                    children: activity.name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 37\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                placeholder: \"Count\",\n                onChange: event => setDurationCount({ ...durationCount,\n                  count: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                placeholder: \"Duration\",\n                onChange: event => setDurationCount({ ...durationCount,\n                  duration: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"addroutine\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No routines made by you\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(MyRoutines, \"T3w0x2XHJxqhTvcI8+8omU2xZS0=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/components/myroutines.js"],"names":["React","useState","useEffect","Redirect","Link","userRoutines","updateRoutine","deleteRoutine","addActivityToRoutine","updateRoutineActivity","deleteRoutineActivity","EditRoutine","MyRoutines","props","theUserRoutines","setTheUserRoutines","activityId","setActivityId","durationCount","setDurationCount","routineId","setRoutineId","loggedIn","currentUser","activities","console","log","handleUpdate","name","goal","id","routines","window","location","reload","error","handleDeleteRoutine","handleActivityAdd","event","preventDefault","duration","count","response","alert","handleActivityUpdate","handleActivityDelete","activity","getUserRoutines","map","routine","index","routineActivityId","description","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Redirect, Link} from 'react-router-dom'\nimport {userRoutines, updateRoutine, deleteRoutine, addActivityToRoutine, updateRoutineActivity, deleteRoutineActivity} from '../api'\nimport EditRoutine from './editroutine'\nconst MyRoutines = (props) => {\n\n    const [theUserRoutines, setTheUserRoutines] = useState([]);\n    const [activityId, setActivityId] = useState();\n    const [durationCount, setDurationCount] = useState();\n    const [routineId, setRoutineId] = useState();\n\n    // const [showEdit, setShowEdit] = useState(false);\n    // const [hack, setHack] = useState(1)\n\n    const {loggedIn, currentUser, activities} = props;\n\n    // console.log('trap',theUserRoutines)\n\n    console.log('dddd', activityId)\n\n    // const makeEdit = async () => {\n    //     setShowEdit(true)\n    // }\n\n    const handleUpdate = async (name, goal, id) => {\n        try{\n            const routines = await updateRoutine(name, goal, id);\n            window.location.reload()\n        } catch(error){\n            console.error\n        }\n    }\n\n\n    const handleDeleteRoutine = async (id) => {\n        try{\n            const routines = await deleteRoutine(id);\n            window.location.reload()\n        }catch (error){\n            console.error(error)\n        }\n    }\n\n    const handleActivityAdd = async (event) =>{\n        event.preventDefault();\n\n        const {duration, count} = durationCount;\n\n        try{\n\n            const response = await addActivityToRoutine(routineId, activityId, count, duration);\n\n            if(!response.id){\n                return alert('Error')\n            }\n\n            setRoutineId(null);\n            setDurationCount(null);\n            setActivityId(null)\n\n            window.location.reload()\n\n        } catch(error){\n            console.error(error)\n        }\n    }\n\n    const handleActivityUpdate = async (routineId, count, duration) => {\n        try{\n            const routines = await updateRoutineActivity(routineId, count, duration);\n            window.location.reload()\n        }catch (error){\n            console.error(error);\n        }\n    }\n\n    const handleActivityDelete = async (id) => {\n        try{\n            const activity = await deleteRoutineActivity(id);\n            window.location.reload()\n        } catch (error){\n            console.error(error);\n        }\n    }\n\n    const getUserRoutines = async () => {\n        if(!currentUser || !activities){\n            return;\n        }\n        try{\n            const routines = await userRoutines(currentUser);\n            // console.log('hhhh', routines)\n            setTheUserRoutines(routines);\n            // console.log('pop',theUserRoutines)\n        }catch (error) {\n            console.error(error);\n        }\n    }\n    \n    useEffect(getUserRoutines, [currentUser, activities])\n    \n\n\n    if(!loggedIn){\n        alert('Log in to view My Routines')\n        return <Redirect to ='/' />;\n    }else{\n\n    return(\n        <>\n        {/* <div> */}\n        <h1 className = 'myroutinestitle'>My Routines</h1>\n        {/* </div> */}\n\n\n        {/* {showEdit ? <EditRoutine showEdit = {showEdit} setShowEdit = {setShowEdit}/> : null} */}\n\n        <div className = 'myroutines'>\n        {theUserRoutines ? (\n            theUserRoutines.map((routine, index) => {\n                return (\n                    <div className = 'myroutinecell' key = {index}>\n                        <h2>{routine.name}</h2>\n                        <h3>{routine.goal}</h3>\n                    \n                \n                {/* <button type = 'button' className = 'edit' onClick = {() => makeEdit()}> */}\n                <button type = 'button' className = 'edit' onClick = {() => handleUpdate(routine.name, routine.goal, routine.id)}>\n                    Edit Routine Name or Goal\n                </button>\n\n                <button type ='button' className = 'delete' \n                onClick = {() => handleDeleteRoutine(routine.id)}\n                >\n                    Delete Routine\n                </button>\n\n\n                {routine.activities[0] ? (\n                    routine.activities.map((activity, index) => {\n                        return(\n                            <ul className = 'details' key={index}>\n                                <li> <span>Activity: {activity.name}</span> </li>\n                                <li><span>ID: {activity.routineActivityId }</span></li>\n                                <li><span>Description: {activity.description} </span></li>\n                                <li><span> Duration: {activity.duration}</span> </li>\n                                <li><span>Count: {activity.count} </span></li>\n\n                                <button type = 'button' \n                                onClick = {() =>handleActivityUpdate(activity.routineActivityId, activity.duration, activity.count)}>\n                                    Update Duration or Count\n                                </button>\n\n                                <button type = 'button'\n                                onClick = {() => handleActivityDelete(activity.routineActivityId)}>\n                                    Delete Routine Activity\n                                </button>\n\n                            </ul>\n                        )\n                    })\n                ) : <h3>No activities for this routine</h3>}\n                \n\n                \n                <form onSubmit = {handleActivityAdd}>\n                    <label>Add Routine Activity</label>\n                    <select name ='Activities' id = 'selectactivity' \n                    value = {activityId} \n                    onChange = {(event) => {setRoutineId(routine.id); setActivityId(event.target.value); return}}>\n                        \n                        <option value ='null'>Select Activity</option>\n                        {\n                            activities.map((activity, index) => {\n                                return (\n                                    <option key = {index} value = {activity.id}>\n                                        {activity.name}\n                                    </option>\n                                )\n                            })\n                        }\n\n                    </select>\n\n                    <label>Count</label>\n                    <input type = 'number' min = '1' placeholder ='Count' \n                    onChange = {(event) => setDurationCount({...durationCount, count: event.target.value})}\n                    />\n                    \n\n\n                    <label>Duration</label>\n                    <input type = 'number' min = '1' placeholder = 'Duration'\n                    onChange = {(event) => setDurationCount({...durationCount, duration: event.target.value})}\n                    />\n                    \n                    <button className = 'addroutine' type = 'submit'>Submit</button>\n                </form>\n\n                </div>\n                \n                )\n            })\n        ): <h2>No routines made by you</h2>}\n\n        </div>\n\n        </>\n    )\n}\n}\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}