{"ast":null,"code":"var _jsxFileName = \"/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport { Home, Login, Register, Logout, MyRoutines, Activities, Rotuines, MakeRoutines } from './components';\nimport { getToken, clearToken } from './auth';\nimport { meUserData, allActivities } from './api'; // import {HashRouter as Router, Route, Link, Switch, Redirect} from 'react-router-dom'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [loggedIn, setIsLoggedIn] = useState(getToken());\n  const [currentUser, setCurrentUser] = useState(''); // console.log('-----',loggedIn)\n\n  console.log('---CU-----', currentUser); // const [authorized, setAuthorized] = useState(false);\n  // console.log('zap', authorized)\n  // const data = await meUserData();\n  // console.log('zappy', data)\n  //had to use an empty array, but why if an array is returned from allActivities?\n\n  const [activities, setActivities] = useState([]);\n  useEffect(async () => {\n    if (loggedIn) {\n      try {\n        const data = await meUserData(); // console.log('zappy', data)\n\n        setCurrentUser(data.username);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }, [loggedIn]);\n  useEffect(async () => {\n    const getActivities = await allActivities(); // console.log('rap', getActivities)\n\n    setActivities(getActivities);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navi\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"essentials\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"links\",\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"links\",\n            to: \"/routines\",\n            children: \"Routines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"links\",\n            to: \"/myroutines\",\n            children: \"My Routines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"links\",\n            to: \"/activities\",\n            children: \"Activities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logreg\",\n          children: [!loggedIn ? /*#__PURE__*/_jsxDEV(Register, {\n            loggedIn: loggedIn,\n            setIsLoggedIn: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 32\n          }, this) : null, !loggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n            loggedIn: loggedIn,\n            setIsLoggedIn: setIsLoggedIn,\n            setCurrentUser: setCurrentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 32\n          }, this) : null, loggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"off\",\n            onClick: () => {\n              clearToken();\n              setIsLoggedIn('');\n              setCurrentUser('');\n              alert('You have been logged out!');\n              location.assign('/');\n            },\n            children: \" Log-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/routines\",\n            children: /*#__PURE__*/_jsxDEV(Rotuines, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/myroutines\",\n            children: [/*#__PURE__*/_jsxDEV(MakeRoutines, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(MyRoutines, {\n              loggedIn: loggedIn,\n              currentUser: currentUser,\n              activities: activities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/activities\",\n            children: /*#__PURE__*/_jsxDEV(Activities, {\n              loggedIn: loggedIn,\n              activities: activities,\n              setActivities: setActivities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"shFTsgnRNP9ipcVEW8/iC4x47q0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/app.js"],"names":["React","useState","useEffect","ReactDOM","HashRouter","Router","Route","Link","Switch","Home","Login","Register","Logout","MyRoutines","Activities","Rotuines","MakeRoutines","getToken","clearToken","meUserData","allActivities","App","loggedIn","setIsLoggedIn","currentUser","setCurrentUser","console","log","activities","setActivities","data","username","error","getActivities","alert","location","assign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Route, Link, Switch} from 'react-router-dom'\n\nimport {Home, Login, Register, Logout, MyRoutines,Activities, Rotuines, MakeRoutines} from './components'\nimport {getToken, clearToken} from './auth'\n\nimport {meUserData, allActivities} from './api'\n\n// import {HashRouter as Router, Route, Link, Switch, Redirect} from 'react-router-dom'\n\nconst App = () =>{\n    \n    const [loggedIn, setIsLoggedIn] = useState(getToken());\n    const [currentUser, setCurrentUser] = useState('');\n    // console.log('-----',loggedIn)\n    console.log('---CU-----' ,currentUser);\n    // const [authorized, setAuthorized] = useState(false);\n    // console.log('zap', authorized)\n\n    // const data = await meUserData();\n    // console.log('zappy', data)\n\n    //had to use an empty array, but why if an array is returned from allActivities?\n    const [activities, setActivities] = useState([]);\n\n    useEffect( async() => {\n        if (loggedIn){\n            try{\n                const data = await meUserData();\n                // console.log('zappy', data)\n                setCurrentUser(data.username)\n\n            } catch (error){\n                console.error(error)\n            }\n        }\n    }, [loggedIn])\n\n    useEffect ( async () => {\n                        \n        const getActivities = await allActivities();\n        // console.log('rap', getActivities)\n        setActivities(getActivities);\n\n    }, [])\n\n\n    return (\n        \n        <>\n        <Router>\n\n        <nav className = 'navi'>\n            <div className = 'essentials'>\n                <Link className = 'links' to = '/'>Home</Link>\n                <Link className = 'links' to = '/routines'>Routines</Link>\n                <Link className = 'links' to = '/myroutines'>My Routines</Link>\n                <Link className = 'links' to = '/activities'>Activities</Link>\n            </div>\n            <div className = 'logreg'>\n                { !loggedIn ? (<Register loggedIn = {loggedIn} setIsLoggedIn = {setIsLoggedIn} />) : null}\n                { !loggedIn ? (<Login loggedIn = {loggedIn} setIsLoggedIn = {setIsLoggedIn} setCurrentUser = {setCurrentUser}/> ): null}\n                \n                {loggedIn ? <button className = 'off' onClick = {() => {\n                    clearToken();\n                    setIsLoggedIn('');\n                    setCurrentUser('');\n                    alert('You have been logged out!')\n                    location.assign('/')\n                }}> Log-out</button> : null}\n            </div>\n\n        </nav>\n\n        {/* <h1> Fitness Tracker</h1> */}\n        \n        \n        {/* {loggedIn ? <button onClick = {() => {\n            clearToken();\n            setIsLoggedIn('');\n            setCurrentUser('');\n            alert('You have been logged out!')\n            location.assign('/')\n        }}> Log-out</button> : null} */}\n       \n       \n            <main>\n                \n                <Switch>\n\n                    <Route exact path = '/'> \n                    < Home /> \n                    \n                    \n                    </Route>\n\n                    {/* <Route path = '/login'>  */}\n                        {/* <Login loggedIn = {loggedIn} setIsLoggedIn = {setIsLoggedIn} setCurrentUser = {setCurrentUser}/>  */}\n                    {/* </Route> */}\n\n                    {/* <Route path = '/register'> */}\n                        {/* <Register loggedIn = {loggedIn} setIsLoggedIn = {setIsLoggedIn} /> */}\n                    {/* </Route> */}\n\n                    <Route path = '/routines'>\n                        <Rotuines />\n                    </Route>\n\n\n                    <Route path = '/myroutines'>\n                        <MakeRoutines />\n                        <MyRoutines loggedIn = {loggedIn} currentUser = {currentUser} activities = {activities}/>\n                    </Route>\n                    \n                    <Route path = '/activities'>\n                        <Activities loggedIn = {loggedIn} activities = {activities} setActivities = {setActivities}/>\n                    </Route>\n\n                    {/* <Route path = '/createroutine'> */}\n                        {/* <MakeRoutines /> */}\n                    {/* <Route path = '/createroutine'> */}\n\n                </Switch>\n            </main>  \n        </Router>\n        </>\n    )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}