{"ast":null,"code":"var _jsxFileName = \"/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { storeToken } from '../auth'; //do we need anything regrding the token in login file? \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [user, setUser] = useState('');\n  const {\n    setCurrentUser,\n    loggedIn,\n    setIsLoggedIn\n  } = props; // console.log('blah',setCurrentUser)\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/login', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: user.username,\n        password: user.password\n      })\n    });\n    const result = await response.json(); // console.log(typeof result.token)\n\n    if (result.user) {\n      alert(result.message);\n      setIsLoggedIn(result.token);\n      storeToken(result.token);\n      window.location.reload();\n    } else {\n      alert(result.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"formlog\",\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"d1\",\n      children: \" Log-In: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logger\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"credential\",\n        placeholder: \"username\",\n        onChange: event => setUser({ ...user,\n          username: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"credential\",\n        placeholder: \"password\",\n        onChange: event => {\n          setUser({ ...user,\n            password: event.target.value\n          });\n          setCurrentUser(user.username);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Sign-in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"66uDv7Gp2hqhGvYfL/E9BkdlaiQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/components/login.js"],"names":["React","useState","storeToken","Login","props","user","setUser","setCurrentUser","loggedIn","setIsLoggedIn","handleLogin","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","password","result","json","alert","message","token","window","location","reload","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,SAAzB,C,CAEA;;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAACM,IAAAA,cAAD;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,MAA4CL,KAAlD,CAHqB,CAKrB;;AAEA,QAAMM,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAD,EAAwD;AAChFC,MAAAA,MAAM,EAAE,MADwE;AAEhFC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuE;AAKhFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,QAAQ,EAAEf,IAAI,CAACe,QADE;AAEjBC,QAAAA,QAAQ,EAAEhB,IAAI,CAACgB;AAFE,OAAf;AAL0E,KAAxD,CAA5B;AAWA,UAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAArB,CAbiC,CAcjC;;AAEA,QAAID,MAAM,CAACjB,IAAX,EAAgB;AACZmB,MAAAA,KAAK,CAACF,MAAM,CAACG,OAAR,CAAL;AACAhB,MAAAA,aAAa,CAACa,MAAM,CAACI,KAAR,CAAb;AACAxB,MAAAA,UAAU,CAACoB,MAAM,CAACI,KAAR,CAAV;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KALD,MAKK;AACDL,MAAAA,KAAK,CAACF,MAAM,CAACG,OAAR,CAAL;AACH;AACJ,GAxBD;;AA2BA,sBACI;AAAM,IAAA,SAAS,EAAG,SAAlB;AAA4B,IAAA,QAAQ,EAAIf,WAAxC;AAAA,4BAGI;AAAO,MAAA,SAAS,EAAG,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAE,MAAb;AAAoB,QAAA,SAAS,EAAG,YAAhC;AACA,QAAA,WAAW,EAAG,UADd;AACyB,QAAA,QAAQ,EAAKC,KAAD,IAAWL,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUe,UAAAA,QAAQ,EAACT,KAAK,CAACmB,MAAN,CAAaC;AAAhC,SAAD;AADvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,IAAI,EAAE,UAAb;AAAwB,QAAA,SAAS,EAAG,YAApC;AACA,QAAA,WAAW,EAAG,UADd;AACyB,QAAA,QAAQ,EAAKpB,KAAD,IAAY;AAACL,UAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUgB,YAAAA,QAAQ,EAACV,KAAK,CAACmB,MAAN,CAAaC;AAAhC,WAAD,CAAP;AAAiDxB,UAAAA,cAAc,CAACF,IAAI,CAACe,QAAN,CAAd;AAA+B;AADlI;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAlDD;;GAAMjB,K;;KAAAA,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react'\nimport {storeToken} from '../auth'\n\n//do we need anything regrding the token in login file? \n\nconst Login = (props) => {\n\n    const [user, setUser] = useState('');\n    const {setCurrentUser, loggedIn, setIsLoggedIn} = props;\n\n    // console.log('blah',setCurrentUser)\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/login', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: user.username,\n                password: user.password\n            })\n        })\n\n        const result = await response.json();\n        // console.log(typeof result.token)\n\n        if (result.user){\n            alert(result.message);\n            setIsLoggedIn(result.token);\n            storeToken(result.token);\n            window.location.reload()\n        }else{\n            alert(result.message)\n        }\n    }\n    \n\n    return (\n        <form className = 'formlog' onSubmit = {handleLogin}>\n\n            {/* <h1> Login </h1> */}\n            <label className = 'd1'> Log-In: </label>\n            <div className = 'logger'>\n                <input type ='text' className = 'credential' \n                placeholder = 'username' onChange = {(event) => setUser({...user, username:event.target.value})} />\n\n                <input type ='password' className = 'credential' \n                placeholder = 'password' onChange = {(event) =>  {setUser({...user, password:event.target.value}); setCurrentUser(user.username) } } />\n                \n                <button type ='submit'> Sign-in </button>\n            </div>\n        </form>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}