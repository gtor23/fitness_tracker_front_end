{"ast":null,"code":"var _jsxFileName = \"/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { storeToken } from '../auth'; //do we need anything regrding the token in login file? \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [user, setUser] = useState('');\n  const {\n    setAuthorized,\n    loggedIn,\n    setIsLoggedIn\n  } = props;\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/login', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: user.username,\n        password: user.password\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n\n    if (result.user) {\n      alert(result.message);\n      setIsLoggedIn(result.token);\n      storeToken(result.token);\n    } else {\n      alert(result.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"credential\",\n      placeholder: \"username\",\n      onChange: event => setUser({ ...user,\n        username: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"credential\",\n      placeholder: \"password\",\n      onChange: event => setUser({ ...user,\n        password: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \" Sign-in \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"66uDv7Gp2hqhGvYfL/E9BkdlaiQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/components/login.js"],"names":["React","useState","storeToken","Login","props","user","setUser","setAuthorized","loggedIn","setIsLoggedIn","handleLogin","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","password","result","json","console","log","alert","message","token","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,SAAzB,C,CAEA;;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAACM,IAAAA,aAAD;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAA2CL,KAAjD;;AAEA,QAAMM,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAD,EAAwD;AAChFC,MAAAA,MAAM,EAAE,MADwE;AAEhFC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFuE;AAKhFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,QAAQ,EAAEf,IAAI,CAACe,QADE;AAEjBC,QAAAA,QAAQ,EAAEhB,IAAI,CAACgB;AAFE,OAAf;AAL0E,KAAxD,CAA5B;AAWA,UAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AAEA,QAAIA,MAAM,CAACjB,IAAX,EAAgB;AACZqB,MAAAA,KAAK,CAACJ,MAAM,CAACK,OAAR,CAAL;AACAlB,MAAAA,aAAa,CAACa,MAAM,CAACM,KAAR,CAAb;AACA1B,MAAAA,UAAU,CAACoB,MAAM,CAACM,KAAR,CAAV;AACH,KAJD,MAIK;AACDF,MAAAA,KAAK,CAACJ,MAAM,CAACK,OAAR,CAAL;AACH;AACJ,GAvBD;;AA0BA,sBACI;AAAM,IAAA,QAAQ,EAAIjB,WAAlB;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAO,MAAA,IAAI,EAAE,MAAb;AAAoB,MAAA,SAAS,EAAG,YAAhC;AACA,MAAA,WAAW,EAAG,UADd;AACyB,MAAA,QAAQ,EAAKC,KAAD,IAAWL,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUe,QAAAA,QAAQ,EAACT,KAAK,CAACkB,MAAN,CAAaC;AAAhC,OAAD;AADvD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAO,MAAA,IAAI,EAAE,UAAb;AAAwB,MAAA,SAAS,EAAG,YAApC;AACA,MAAA,WAAW,EAAG,UADd;AACyB,MAAA,QAAQ,EAAKnB,KAAD,IAAWL,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUgB,QAAAA,QAAQ,EAACV,KAAK,CAACkB,MAAN,CAAaC;AAAhC,OAAD;AADvD;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAQ,MAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA9CD;;GAAM3B,K;;KAAAA,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react'\nimport {storeToken} from '../auth'\n\n//do we need anything regrding the token in login file? \n\nconst Login = (props) => {\n\n    const [user, setUser] = useState('');\n    const {setAuthorized, loggedIn, setIsLoggedIn} = props;\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/login', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: user.username,\n                password: user.password\n            })\n        })\n\n        const result = await response.json();\n        console.log(result)\n\n        if (result.user){\n            alert(result.message);\n            setIsLoggedIn(result.token);\n            storeToken(result.token);\n        }else{\n            alert(result.message)\n        }\n    }\n    \n\n    return (\n        <form onSubmit = {handleLogin}>\n\n            <h1> Login </h1>\n            {/* <label> Username: </label> */}\n            <input type ='text' className = 'credential' \n            placeholder = 'username' onChange = {(event) => setUser({...user, username:event.target.value})} />\n\n            <input type ='password' className = 'credential' \n            placeholder = 'password' onChange = {(event) => setUser({...user, password:event.target.value})} />\n            \n            <button type ='submit'> Sign-in </button>\n\n        </form>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}