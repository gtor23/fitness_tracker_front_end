{"ast":null,"code":"var _jsxFileName = \"/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/components/myroutines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { userRoutines, updateRoutine, deleteRoutine } from '../api';\nimport EditRoutine from './editroutine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = props => {\n  _s();\n\n  const [theUserRoutines, setTheUserRoutines] = useState([]);\n  const [activityId, setActivityId] = useState();\n  const [durationCount, setDurationCount] = useState();\n  const [routineId, setRoutineId] = useState(); // const [showEdit, setShowEdit] = useState(false);\n  // const [hack, setHack] = useState(1)\n\n  const {\n    loggedIn,\n    currentUser,\n    activities\n  } = props;\n  console.log('trap', theUserRoutines); // const makeEdit = async () => {\n  //     setShowEdit(true)\n  // }\n\n  const handleUpdate = async (name, goal, id) => {\n    try {\n      const routines = await updateRoutine(name, goal, id);\n    } catch (error) {\n      console.error;\n    }\n  };\n\n  const handleDeleteRoutine = async id => {\n    try {\n      const routines = await deleteRoutine(id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getUserRoutines = async () => {\n    if (!currentUser || !activities) {\n      return;\n    }\n\n    try {\n      const routines = await userRoutines(currentUser);\n      console.log('hhhh', routines);\n      setTheUserRoutines(routines);\n      console.log('pop', theUserRoutines);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(getUserRoutines, [currentUser, activities]);\n\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"------My routines------\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), theUserRoutines ? theUserRoutines.map((routine, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: routine.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: routine.goal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"edit\",\n            onClick: () => handleUpdate(routine.name, routine.goal, routine.id),\n            children: \"Edit Routine Name or Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"delete\",\n            onClick: () => handleDeleteRoutine(routine.id),\n            children: \"Delete Routine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No routines made by you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(MyRoutines, \"T3w0x2XHJxqhTvcI8+8omU2xZS0=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/components/myroutines.js"],"names":["React","useState","useEffect","Redirect","Link","userRoutines","updateRoutine","deleteRoutine","EditRoutine","MyRoutines","props","theUserRoutines","setTheUserRoutines","activityId","setActivityId","durationCount","setDurationCount","routineId","setRoutineId","loggedIn","currentUser","activities","console","log","handleUpdate","name","goal","id","routines","error","handleDeleteRoutine","getUserRoutines","map","routine","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Redirect, Link} from 'react-router-dom'\nimport {userRoutines, updateRoutine, deleteRoutine} from '../api'\nimport EditRoutine from './editroutine'\nconst MyRoutines = (props) => {\n\n    const [theUserRoutines, setTheUserRoutines] = useState([]);\n    const [activityId, setActivityId] = useState();\n    const [durationCount, setDurationCount] = useState();\n    const [routineId, setRoutineId] = useState();\n\n    // const [showEdit, setShowEdit] = useState(false);\n    // const [hack, setHack] = useState(1)\n\n    const {loggedIn, currentUser, activities} = props;\n\n    console.log('trap',theUserRoutines)\n\n    // const makeEdit = async () => {\n    //     setShowEdit(true)\n    // }\n\n    const handleUpdate = async (name, goal, id) => {\n        try{\n            const routines = await updateRoutine(name, goal, id);\n        } catch(error){\n            console.error\n        }\n    }\n\n\n    const handleDeleteRoutine = async (id) => {\n        try{\n            const routines = await deleteRoutine(id);\n        }catch (error){\n            console.error(error)\n        }\n    }\n\n    const getUserRoutines = async () => {\n        if(!currentUser || !activities){\n            return;\n        }\n        try{\n            const routines = await userRoutines(currentUser);\n            console.log('hhhh', routines)\n            setTheUserRoutines(routines);\n            console.log('pop',theUserRoutines)\n        }catch (error) {\n            console.error(error);\n        }\n    }\n    \n    useEffect(getUserRoutines, [currentUser, activities])\n    \n\n\n    if(!loggedIn){\n        return <Redirect to ='/' />;\n    }else{\n\n    return(\n        <>\n        <div>\n        <h1>------My routines------</h1>\n        </div>\n\n\n        {/* {showEdit ? <EditRoutine showEdit = {showEdit} setShowEdit = {setShowEdit}/> : null} */}\n\n        {theUserRoutines ? (\n            theUserRoutines.map((routine, index) => {\n                return (\n                    <div key = {index}>\n                        <h2>{routine.name}</h2>\n                        <h3>{routine.goal}</h3>\n                    \n                \n                {/* <button type = 'button' className = 'edit' onClick = {() => makeEdit()}> */}\n                <button type = 'button' className = 'edit' onClick = {() => handleUpdate(routine.name, routine.goal, routine.id)}>\n                    Edit Routine Name or Goal\n                </button>\n\n                <button type ='button' className = 'delete' onClick = {() => handleDeleteRoutine(routine.id)}>\n                    Delete Routine\n                </button>\n                \n                </div>\n                \n                )\n            })\n        ): <h2>No routines made by you</h2>}\n\n\n\n        </>\n    )\n}\n}\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}