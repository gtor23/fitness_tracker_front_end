{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ReactDOM from'react-dom';import{HashRouter as Router,Route,Link,Switch}from'react-router-dom';import{Home,Login,Register,Logout,MyRoutines,Activities,Rotuines,MakeRoutines}from'./components';import{getToken,clearToken}from'./auth';import{meUserData,allActivities}from'./api';// import {HashRouter as Router, Route, Link, Switch, Redirect} from 'react-router-dom'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(getToken()),_useState2=_slicedToArray(_useState,2),loggedIn=_useState2[0],setIsLoggedIn=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),currentUser=_useState4[0],setCurrentUser=_useState4[1];// console.log('-----',loggedIn)\nconsole.log('---CU-----',currentUser);// const [authorized, setAuthorized] = useState(false);\n// console.log('zap', authorized)\n// const data = await meUserData();\n// console.log('zappy', data)\n//had to use an empty array, but why if an array is returned from allActivities?\nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),activities=_useState6[0],setActivities=_useState6[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!loggedIn){_context.next=11;break;}_context.prev=1;_context.next=4;return meUserData();case 4:data=_context.sent;// console.log('zappy', data)\nsetCurrentUser(data.username);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);})),[loggedIn]);useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var getActivities;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return allActivities();case 2:getActivities=_context2.sent;// console.log('rap', getActivities)\nsetActivities(getActivities);case 4:case\"end\":return _context2.stop();}}},_callee2);})),[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsxs(\"nav\",{className:\"navi\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"essentials\",children:[/*#__PURE__*/_jsx(Link,{className:\"links\",to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{className:\"links\",to:\"/routines\",children:\"Routines\"}),/*#__PURE__*/_jsx(Link,{className:\"links\",to:\"/myroutines\",children:\"My Routines\"}),/*#__PURE__*/_jsx(Link,{className:\"links\",to:\"/activities\",children:\"Activities\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"logreg\",children:[!loggedIn?/*#__PURE__*/_jsx(Register,{loggedIn:loggedIn,setIsLoggedIn:setIsLoggedIn}):null,!loggedIn?/*#__PURE__*/_jsx(Login,{loggedIn:loggedIn,setIsLoggedIn:setIsLoggedIn,setCurrentUser:setCurrentUser}):null,loggedIn?/*#__PURE__*/_jsx(\"button\",{className:\"off\",onClick:function onClick(){clearToken();setIsLoggedIn('');setCurrentUser('');alert('You have been logged out!');location.assign('/');},children:\" Log-out\"}):null]})]}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/routines\",children:/*#__PURE__*/_jsx(Rotuines,{})}),/*#__PURE__*/_jsxs(Route,{path:\"/myroutines\",children:[/*#__PURE__*/_jsx(MakeRoutines,{}),/*#__PURE__*/_jsx(MyRoutines,{loggedIn:loggedIn,currentUser:currentUser,activities:activities})]}),/*#__PURE__*/_jsx(Route,{path:\"/activities\",children:/*#__PURE__*/_jsx(Activities,{loggedIn:loggedIn,activities:activities,setActivities:setActivities})})]})})]})});};export default App;","map":{"version":3,"sources":["/Users/jtorres/UIC Bootcamp/Projects/fitness_tracker/fitness_tracker_frontend/src/app.js"],"names":["React","useState","useEffect","ReactDOM","HashRouter","Router","Route","Link","Switch","Home","Login","Register","Logout","MyRoutines","Activities","Rotuines","MakeRoutines","getToken","clearToken","meUserData","allActivities","App","loggedIn","setIsLoggedIn","currentUser","setCurrentUser","console","log","activities","setActivities","data","username","error","getActivities","alert","location","assign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Route, Link, Switch} from 'react-router-dom'\n\nimport {Home, Login, Register, Logout, MyRoutines,Activities, Rotuines, MakeRoutines} from './components'\nimport {getToken, clearToken} from './auth'\n\nimport {meUserData, allActivities} from './api'\n\n// import {HashRouter as Router, Route, Link, Switch, Redirect} from 'react-router-dom'\n\nconst App = () =>{\n    \n    const [loggedIn, setIsLoggedIn] = useState(getToken());\n    const [currentUser, setCurrentUser] = useState('');\n    // console.log('-----',loggedIn)\n    console.log('---CU-----' ,currentUser);\n    // const [authorized, setAuthorized] = useState(false);\n    // console.log('zap', authorized)\n\n    // const data = await meUserData();\n    // console.log('zappy', data)\n\n    //had to use an empty array, but why if an array is returned from allActivities?\n    const [activities, setActivities] = useState([]);\n\n    useEffect( async() => {\n        if (loggedIn){\n            try{\n                const data = await meUserData();\n                // console.log('zappy', data)\n                setCurrentUser(data.username)\n\n            } catch (error){\n                console.error(error)\n            }\n        }\n    }, [loggedIn])\n\n    useEffect ( async () => {\n                        \n        const getActivities = await allActivities();\n        // console.log('rap', getActivities)\n        setActivities(getActivities);\n\n    }, [])\n\n\n    return (\n        \n        <>\n        <Router>\n\n        <nav className = 'navi'>\n            <div className = 'essentials'>\n                <Link className = 'links' to = '/'>Home</Link>\n                <Link className = 'links' to = '/routines'>Routines</Link>\n                <Link className = 'links' to = '/myroutines'>My Routines</Link>\n                <Link className = 'links' to = '/activities'>Activities</Link>\n            </div>\n            <div className = 'logreg'>\n                { !loggedIn ? (<Register loggedIn = {loggedIn} setIsLoggedIn = {setIsLoggedIn} />) : null}\n                { !loggedIn ? (<Login loggedIn = {loggedIn} setIsLoggedIn = {setIsLoggedIn} setCurrentUser = {setCurrentUser}/> ): null}\n                \n                {loggedIn ? <button className = 'off' onClick = {() => {\n                    clearToken();\n                    setIsLoggedIn('');\n                    setCurrentUser('');\n                    alert('You have been logged out!')\n                    location.assign('/')\n                }}> Log-out</button> : null}\n            </div>\n\n        </nav>\n\n        {/* <h1> Fitness Tracker</h1> */}\n        \n        \n        {/* {loggedIn ? <button onClick = {() => {\n            clearToken();\n            setIsLoggedIn('');\n            setCurrentUser('');\n            alert('You have been logged out!')\n            location.assign('/')\n        }}> Log-out</button> : null} */}\n       \n       \n            <main>\n                \n                <Switch>\n\n                    <Route exact path = '/'> \n                    < Home /> \n                    \n                    \n                    </Route>\n\n                    {/* <Route path = '/login'>  */}\n                        {/* <Login loggedIn = {loggedIn} setIsLoggedIn = {setIsLoggedIn} setCurrentUser = {setCurrentUser}/>  */}\n                    {/* </Route> */}\n\n                    {/* <Route path = '/register'> */}\n                        {/* <Register loggedIn = {loggedIn} setIsLoggedIn = {setIsLoggedIn} /> */}\n                    {/* </Route> */}\n\n                    <Route path = '/routines'>\n                        <Rotuines />\n                    </Route>\n\n\n                    <Route path = '/myroutines'>\n                        <MakeRoutines />\n                        <MyRoutines loggedIn = {loggedIn} currentUser = {currentUser} activities = {activities}/>\n                    </Route>\n                    \n                    <Route path = '/activities'>\n                        <Activities loggedIn = {loggedIn} activities = {activities} setActivities = {setActivities}/>\n                    </Route>\n\n                    {/* <Route path = '/createroutine'> */}\n                        {/* <MakeRoutines /> */}\n                    {/* <Route path = '/createroutine'> */}\n\n                </Switch>\n            </main>  \n        </Router>\n        </>\n    )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}