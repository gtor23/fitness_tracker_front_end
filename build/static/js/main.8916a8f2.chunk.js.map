{"version":3,"sources":["components/home.js","auth/index.js","components/login.js","components/register.js","api/index.js","components/myroutines.js","components/activities.js","components/routines.js","components/makeroutines.js","app.js","index.js"],"names":["Home","className","src","alt","getToken","localStorage","getItem","Login","props","useState","user","setUser","setCurrentUser","setIsLoggedIn","loggedIn","handleLogin","event","a","preventDefault","fetch","method","headers","body","JSON","stringify","username","password","response","json","result","alert","message","token","setItem","window","location","reload","onSubmit","type","placeholder","onChange","target","value","Register","handleRegister","aToken","BASE_URL","meUserData","meData","console","error","userRoutines","userData","allActivities","activitiesData","createActivity","activity","activityData","allRoutines","allRotuinesData","createRoutines","routine","Authorization","createRoutinesData","updateRoutine","name","goal","routineId","fields","editName","prompt","editGoal","deleteRoutine","id","addActivityToRoutine","activityIdR","countR","durationR","activityId","count","duration","data","updateRoutineActivity","newCount","newDuration","deleteRoutineActivity","MyRoutines","theUserRoutines","setTheUserRoutines","setActivityId","durationCount","setDurationCount","setRoutineId","rend","setRend","currentUser","activities","newRoutine","handleUpdate","handleDeleteRoutine","handleActivityAdd","undefined","handleActivityUpdate","handleActivityDelete","getUserRoutines","routines","useEffect","map","index","onClick","routineActivityId","description","min","to","Activities","setActivities","addActivity","setAddActivity","handleCreateActivity","creation","ctype","Routines","gotRoutines","setGotRoutines","getAllRoutines","creatorName","anActivity","MakeRoutines","setNewRoutine","handleMake","addRoutine","isPublic","App","getActivities","removeItem","assign","exact","path","ReactDOM","render","document","getElementById"],"mappings":"4NAmBeA,EAlBF,WAET,OACI,mCACA,sBAAKC,UAAY,OAAjB,UACI,qBAAKA,UAAY,YAAjB,SACI,kDAGJ,qBAAKA,UAAY,YAAjB,SACI,qBAAKC,IAAM,gIAAgIC,IAAM,iB,OCPpJC,EAAW,WACpB,OAAOC,aAAaC,QAAQ,UCiDjBC,EAlDD,SAACC,GAEX,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACOC,EAA2CJ,EAA3CI,eAA0BC,GAAiBL,EAA3BM,SAA2BN,EAAjBK,eAG3BE,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAChBD,EAAME,iBADU,SAEOC,MAAM,sDAAuD,CAChFC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,SAAUf,EAAKe,SACfC,SAAUhB,EAAKgB,aATP,cAEVC,EAFU,gBAaKA,EAASC,OAbd,QAaVC,EAbU,QAeLnB,MACPoB,MAAMD,EAAOE,SACblB,EAAcgB,EAAOG,OD3BNA,EC4BJH,EAAOG,MD3B1B3B,aAAa4B,QAAQ,QAASD,GC4BtBE,OAAOC,SAASC,UAEhBN,MAAMD,EAAOE,SArBD,iCDVE,IAACC,ICUH,OAAH,sDA0BjB,OACI,uBAAM/B,UAAY,UAAUoC,SAAYtB,EAAxC,UAGI,uBAAOd,UAAY,KAAnB,uBACA,sBAAKA,UAAY,SAAjB,UACI,uBAAOqC,KAAM,OAAOrC,UAAY,cAChCsC,YAAc,WAAWC,SAAY,SAACxB,GAAD,OAAWL,EAAQ,2BAAID,GAAL,IAAWe,SAAST,EAAMyB,OAAOC,YAExF,uBAAOJ,KAAM,WAAWrC,UAAY,cACpCsC,YAAc,WAAWC,SAAY,SAACxB,GAAYL,EAAQ,2BAAID,GAAL,IAAWgB,SAASV,EAAMyB,OAAOC,SAAS9B,EAAeF,EAAKe,aAEvH,wBAAQxB,UAAY,KAAKqC,KAAM,SAA/B,8BCGDK,EA/CE,SAACnC,GACoBA,EAA3BM,SAAP,IAAiBD,EAAiBL,EAAjBK,cACjB,EAAwBJ,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMiC,EAAc,uCAAG,WAAO5B,GAAP,iBAAAC,EAAA,6DACnBD,EAAME,iBADa,SAEEC,MAAM,yDAA0D,CACrFC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,SAAUf,EAAKe,SACfC,SAAUhB,EAAKgB,aATA,cAEfC,EAFe,gBAcEA,EAASC,OAdX,QAcbC,EAda,QAiBRG,OACHF,MAAM,6BACNjB,EAAcgB,EAAOG,QAErBF,MAAMD,EAAOE,SArBF,2CAAH,sDA0BpB,OACI,uBAAM9B,UAAY,UAAUoC,SAAYO,EAAxC,UAEI,uBAAO3C,UAAY,KAAnB,yBACA,sBAAKA,UAAY,eAAjB,UACI,uBAAOqC,KAAM,OAAOrC,UAAY,cAChCsC,YAAc,WAAWC,SAAY,SAACxB,GAAD,OAAWL,EAAQ,2BAAID,GAAL,IAAWe,SAAST,EAAMyB,OAAOC,YAExF,uBAAOJ,KAAM,WAAWrC,UAAY,cACpCsC,YAAc,WAAYC,SAAY,SAACxB,GAAD,OAAWL,EAAQ,2BAAID,GAAL,IAAWgB,SAASV,EAAMyB,OAAOC,YAEzF,wBAAQzC,UAAY,KAAKqC,KAAM,SAA/B,6BC5CVO,EAASzC,IACT0C,EAAW,2CAEJC,EAAU,uCAAG,8BAAA9B,EAAA,+EAGKE,MAAM,GAAD,OAAI2B,EAAJ,YAAuB,CAC/CzB,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BwB,MANjB,cAGZlB,EAHY,gBAUGA,EAASC,OAVZ,cAUZoB,EAVY,yBAWXA,GAXW,kCAclBC,QAAQC,MAAR,MAdkB,0DAAH,qDAmBVC,EAAY,uCAAG,WAAO1B,GAAP,iBAAAR,EAAA,+EAEGE,MAAK,UAAK2B,EAAL,iBAAsBrB,EAAtB,aAA2C,CACnEJ,QAAS,CACL,eAAgB,sBAJJ,cAEdM,EAFc,gBAQGA,EAASC,OARZ,cAQdwB,EARc,yBAUbA,GAVa,kCAapBH,QAAQC,MAAR,MAboB,0DAAH,sDAiBZG,EAAa,uCAAG,8BAAApC,EAAA,sEAIfU,EAAWR,MAAM,GAAD,OAAI2B,EAAJ,cAA0B,CAC5CzB,QAAS,CACP,eAAgB,sBAND,SAUiBM,EAVjB,8BAU2BC,OAV3B,cAUb0B,EAVa,yBAWZA,GAXY,kCAcrBL,QAAQC,MAAR,MAdqB,0DAAH,qDAoBbK,EAAc,uCAAG,WAAOC,GAAP,iBAAAvC,EAAA,+EAECE,MAAM,GAAD,OAAI2B,EAAJ,cAA0B,CAClD1B,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BwB,IAE/BvB,KAAMC,KAAKC,UAAUgC,KARH,cAEhB7B,EAFgB,gBAWKA,EAASC,OAXd,cAWhB6B,EAXgB,yBAafA,GAbe,kCAgBtBR,QAAQC,MAAR,MAhBsB,0DAAH,sDAoBdQ,EAAW,uCAAG,8BAAAzC,EAAA,+EAGIE,MAAM,GAAD,OAAI2B,EAAJ,YAAwB,CAChDzB,QAAS,CACL,eAAgB,sBALL,cAGbM,EAHa,gBASWA,EAASC,OATpB,cASb+B,EATa,yBAWZA,GAXY,kCAcnBV,QAAQC,MAAR,MAdmB,0DAAH,qDAkBXU,EAAc,uCAAG,WAAOC,GAAP,iBAAA5C,EAAA,+EAGCE,MAAM,GAAD,OAAI2B,EAAJ,YAAwB,CAChD1B,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChByC,cAAc,UAAD,OAAYjB,IAE3BvB,KAAMC,KAAKC,UAAUqC,KATH,cAGhBlC,EAHgB,gBAWaA,EAASC,OAXtB,cAWdmC,EAXc,yBAabA,GAba,kCAgBtBd,QAAQC,MAAR,MAhBsB,0DAAH,sDAsBdc,EAAa,uCAAG,WAAOC,EAAMC,EAAMC,GAAnB,mBAAAlD,EAAA,6DACrBmD,EAAS,GAETC,EAAWC,OAAO,QAASL,GAE3BM,EAAWD,OAAO,QAASJ,GAE3BG,IACAD,EAAOH,KAAOI,GAEdE,IACAH,EAAOF,KAAOK,GAXO,kBAeEpD,MAAM,GAAD,OAAI2B,EAAJ,oBAAwBqB,GAAa,CAC7D/C,OAAQ,QACRC,QAAS,CACP,eAAgB,mBAChByC,cAAc,UAAD,OAAYjB,IAE3BvB,KAAMC,KAAKC,UAAU4C,KArBJ,gEAwBrBnB,QAAQC,MAAR,MACApB,MAAM,EAAD,IAzBgB,0DAAH,0DA6Bb0C,EAAa,uCAAG,WAAOC,GAAP,SAAAxD,EAAA,+EAEEE,MAAK,UAAK2B,EAAL,oBAAyB2B,GAAM,CACvDrD,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChByC,cAAc,UAAD,OAAYjB,MANV,8DAWrBI,QAAQC,MAAR,MACApB,MAAM,EAAD,IAZgB,yDAAH,sDAgBb4C,EAAoB,uCAAG,WAAQP,EAAWQ,EAAaC,EAAQC,GAAxC,iBAAA5D,EAAA,+EAILE,MAAK,UAAK2B,EAAL,oBAAyBqB,EAAzB,eAAiD,CACzE/C,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACjBsD,WAAYH,EACZI,MAAOH,EACPI,SAAUH,MAZU,cAItBlD,EAJsB,gBAgBTA,EAASC,OAhBA,cAgBtBqD,EAhBsB,yBAiBrBA,GAjBqB,kCAmB5BhC,QAAQC,MAAR,MAnB4B,0DAAH,4DAyBpBgC,EAAqB,uCAAG,WAAOT,EAAIM,EAAOC,GAAlB,uBAAA/D,EAAA,6DAC7BmD,EAAS,GACTe,EAAWb,OAAO,QAASS,GAC3BK,EAAcd,OAAO,WAAYU,GAEjCG,IACAf,EAAOW,MAAQI,GAEfC,IACAhB,EAAOY,SAAWI,GATW,kBAcNjE,MAAM,GAAD,OAAI2B,EAAJ,+BAAmC2B,GAAM,CACjErD,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChByC,cAAc,UAAD,OAAYjB,IAE7BvB,KAAMC,KAAKC,UAAU4C,KApBI,cAcvBzC,EAduB,iBAuBVA,EAASC,OAvBC,eAuBvBqD,EAvBuB,yBAwBtBA,GAxBsB,kCA0B7BhC,QAAQC,MAAR,MACApB,MAAM,EAAD,IA3BwB,0DAAH,0DA+BrBuD,EAAqB,uCAAG,WAAOZ,GAAP,iBAAAxD,EAAA,+EAGNE,MAAM,GAAD,OAAI2B,EAAJ,+BAAmC2B,GAAM,CACnErD,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChByC,cAAc,UAAD,OAAYjB,MAPA,cAGvBlB,EAHuB,gBAUVA,EAASC,OAVC,cAUvBqD,EAVuB,yBAWtBA,GAXsB,kCAa7BnD,MAAM,EAAD,IAbwB,0DAAH,sDCbnBwD,EA7MI,SAAC9E,GAEhB,MAA8CC,mBAAS,IAAvD,mBAAO8E,EAAP,KAAwBC,EAAxB,KACA,EAAoC/E,qBAApC,mBAAOqE,EAAP,KAAmBW,EAAnB,KACA,EAA0ChF,qBAA1C,mBAAOiF,EAAP,KAAsBC,EAAtB,KACA,EAAkClF,qBAAlC,mBAAO0D,EAAP,KAAkByB,EAAlB,KAEA,EAAwBnF,mBAAS,GAAjC,mBAAOoF,EAAP,KAAaC,EAAb,KAEOhF,EAAiDN,EAAjDM,SAAUiF,EAAuCvF,EAAvCuF,YAAaC,EAA0BxF,EAA1BwF,WAAYC,EAAczF,EAAdyF,WAEpCC,EAAY,uCAAG,WAAOjC,EAAMC,EAAMO,GAAnB,SAAAxD,EAAA,+EAEU+C,EAAcC,EAAMC,EAAMO,GAFpC,cAGbqB,EAAQD,EAAO,GAHF,gDAKb5C,QAAQC,MALK,yDAAH,0DAUZiD,EAAmB,uCAAG,WAAO1B,GAAP,SAAAxD,EAAA,+EAEGuD,EAAcC,GAFjB,cAGpBqB,EAAQD,EAAO,GAHK,gDAKpB5C,QAAQC,MAAR,MALoB,yDAAH,sDASnBkD,EAAiB,uCAAG,WAAOpF,GAAP,iBAAAC,EAAA,8DAELoF,GAAjBX,EAFsB,yCAGf5D,MAAM,gCAHS,cAMfkD,EAAmBU,EAAnBV,SAAUD,EAASW,EAATX,MANK,kBAWKL,EAAqBP,EAAWW,EAAYC,EAAOC,GAXxD,iBAcLP,GAdK,yCAeP3C,MAAM,UAfC,OAkBlBgE,EAAQD,EAAO,GACfD,EAAa,MACbD,EAAiB,MACjBF,EAAc,MArBI,kDAwBlBxC,QAAQC,MAAR,MAxBkB,0DAAH,sDA4BjBoD,EAAoB,uCAAG,WAAOnC,EAAWY,EAAOC,GAAzB,SAAA/D,EAAA,+EAEEiE,EAAsBf,EAAWY,EAAOC,GAF1C,cAGrBc,EAAQD,EAAO,GAHM,gDAMrB5C,QAAQC,MAAR,MANqB,yDAAH,0DAUpBqD,EAAoB,uCAAG,WAAO9B,GAAP,SAAAxD,EAAA,+EAEEoE,EAAsBZ,GAFxB,cAGrBqB,EAAQD,EAAO,GAHM,gDAMrB5C,QAAQC,MAAR,MANqB,yDAAH,sDAUpBsD,EAAe,uCAAG,4BAAAvF,EAAA,yDAChB8E,GAAgBC,EADA,0EAKO7C,EAAa4C,GALpB,OAKVU,EALU,OAOhBjB,EAAmBiB,GAPH,gDAUhBxD,QAAQC,MAAR,MAVgB,yDAAH,qDAuBrB,OAPAwD,qBAAU,WACNF,MAED,CAACT,EAAaF,EAAMI,IAInBnF,EAMA,qCAEA,oBAAIb,UAAY,kBAAhB,yBAEA,qBAAKA,UAAY,aAAjB,SACCsF,EACGA,EAAgBoB,KAAI,SAAC9C,EAAS+C,GAC1B,OACI,sBAAK3G,UAAY,gBAAjB,UACI,oBAAIA,UAAY,KAAhB,SAAsB4D,EAAQI,OAC9B,oBAAIhE,UAAY,KAAhB,SAAsB4D,EAAQK,OAEtC,wBAAQ5B,KAAO,SAASrC,UAAY,OAAO4G,QAAW,kBAAMX,EAAarC,EAAQI,KAAMJ,EAAQK,KAAML,EAAQY,KAA7G,uCAIA,wBAAQnC,KAAM,SAASrC,UAAY,SACnC4G,QAAW,kBAAMV,EAAoBtC,EAAQY,KAD7C,4BAOCZ,EAAQmC,WAAW,GAChBnC,EAAQmC,WAAWW,KAAI,SAACnD,EAAUoD,GAC9B,OACI,qBAAI3G,UAAY,UAAhB,UACI,mCAAK,8CAAiBuD,EAASS,QAA/B,OACA,6BAAI,wCAAWT,EAASsD,uBACxB,6BAAI,iDAAoBtD,EAASuD,YAA7B,SACJ,+BAAI,+CAAkBvD,EAASwB,YAA/B,OACA,6BAAI,2CAAcxB,EAASuB,MAAvB,SAEJ,wBAAQ9E,UAAY,OAAOqC,KAAO,SAASuE,QAAW,kBAAKP,EAAqB9C,EAASsD,kBAAmBtD,EAASwB,SAAUxB,EAASuB,QAAxI,sCAIA,wBAAQ9E,UAAY,SAASqC,KAAO,SAASuE,QAAW,kBAAMN,EAAqB/C,EAASsD,oBAA5F,uCAX2BF,MAkBvC,oBAAI3G,UAAY,UAAhB,4CAGJ,uBAAMA,UAAY,SAAlB,UAEI,uBAAOA,UAAY,KAAnB,mCACA,yBAAQgE,KAAM,aAAaQ,GAAK,iBAChCjC,SAAY,SAACxB,GAAW4E,EAAa/B,EAAQY,IAAKgB,EAAczE,EAAMyB,OAAOC,QAD7E,UAII,wBAAQzC,UAAY,WAAYyC,MAAO,OAAvC,6BAEIsD,EAAWW,KAAI,SAACnD,EAAUoD,GACtB,OACI,wBAAsBlE,MAASc,EAASiB,GAAxC,SACKjB,EAASS,MADC2C,SAW3B,sBAAK3G,UAAY,WAAjB,UACI,uBAAOA,UAAY,KAAnB,oBACA,uBAAOA,UAAY,UAAUqC,KAAO,SAAS0E,IAAM,IAAIzE,YAAa,QACpEC,SAAY,SAACxB,GAAD,OAAW2E,EAAiB,2BAAID,GAAL,IAAoBX,MAAO/D,EAAMyB,OAAOC,eAInF,sBAAKzC,UAAY,cAAjB,UACI,uBAAOA,UAAY,KAAnB,uBACA,uBAAOA,UAAY,WAAWqC,KAAO,SAAS0E,IAAM,IAAIzE,YAAc,WACtEC,SAAY,SAACxB,GAAD,OAAW2E,EAAiB,2BAAID,GAAL,IAAoBV,SAAUhE,EAAMyB,OAAOC,eAItF,wBAAQzC,UAAY,aAAaqC,KAAO,SAASuE,QAAW,SAAC7F,GAAD,OAAWoF,EAAkBpF,IAAzF,yBA3EoC4F,MAkFjD,oBAAI3G,UAAY,OAAhB,2CA/FH6B,MAAM,8BACC,cAAC,IAAD,CAAUmF,GAAI,Q,QC9BdC,EAzEI,SAAC1G,GAChB,IAAOM,EAAwCN,EAAxCM,SAAUkF,EAA8BxF,EAA9BwF,WAAYmB,EAAkB3G,EAAlB2G,cAC7B,EAAsC1G,qBAAtC,mBAAO2G,EAAP,KAAoBC,EAApB,KAEMC,EAAoB,uCAAG,WAAOtG,GAAP,eAAAC,EAAA,sEAErBD,EAAME,iBAFe,SAGEqC,EAAe6D,GAHjB,QAGfG,EAHe,QAKR9C,GACT0C,EAAc,CAACI,GAAF,mBAAevB,KAE5BlE,MAAMyF,EAASxF,SARE,gDAYrBkB,QAAQC,MAAR,MAZqB,yDAAH,sDAiB1B,OACI,qCACI,oBAAIjD,UAAY,kBAAhB,wBAGA,sBAAKA,UAAY,aAAjB,UACI,qBAAKA,UAAY,mBAAjB,SAECa,EACG,qCACA,oBAAIb,UAAY,WAAhB,6BACA,uBAAMA,UAAY,eAAeoC,SAAYiF,EAA7C,UAEI,sBAAKrH,UAAY,KAAjB,UACA,8CACA,uBAAOuH,MAAQ,OAAOvH,UAAY,eAClCuC,SAAa,SAACxB,GAAaqG,EAAe,2BAAID,GAAL,IAAkBnD,KAAMjD,EAAMyB,OAAOC,eAG9E,sBAAKzC,UAAY,KAAjB,UACA,iDACA,uBAAOqC,KAAO,OAAOrC,UAAY,sBACjCuC,SAAa,SAACxB,GAAaqG,EAAe,2BAAID,GAAL,IAAkBL,YAAa/F,EAAMyB,OAAOC,eAGrF,wBAAQzC,UAAY,iBAAiBqC,KAAO,SAA5C,4BAIF,OAMT0D,EAAWW,KAAI,SAAAnD,GACZ,OACI,sBAAKvD,UAAW,eAAhB,UAEA,qBAAIA,UAAY,KAAhB,uBAAgCuD,EAASS,KAAzC,OACA,qBAAIhE,UAAY,KAAhB,2BAAoCuD,EAASuD,YAA7C,SAHsCvD,EAASiB,cCKpDgD,EA/DE,WAEb,MAAsChH,mBAAS,IAA/C,mBAAOiH,EAAP,KAAoBC,EAApB,KAEMC,EAAc,uCAAG,4BAAA3G,EAAA,+EAGQyC,IAHR,OAGT+C,EAHS,OAIfkB,EAAelB,GAJA,gDAQfxD,QAAQC,MAAR,MARe,yDAAH,qDAcpB,OAFAwD,oBAAWkB,EAAgB,IAGvB,qCAEA,oBAAI3H,UAAY,gBAAhB,wBACA,sBAAKA,UAAY,WAAjB,UACCyH,EAAYf,KAAI,SAAA9C,GACb,OACI,sBAAK5D,UAAY,cAAjB,UACI,qBAAIA,UAAY,KAAhB,uBAAgC4D,EAAQI,KAAxC,OACA,qBAAIhE,UAAY,KAAhB,oBAA6B4D,EAAQK,KAArC,OACA,qBAAIjE,UAAY,KAAhB,sBAA+B4D,EAAQgE,YAAvC,OAEJ,qBAAK5H,UAAY,eAAjB,SACK4D,EAAQmC,WAAW,GAEpBnC,EAAQmC,WAAWW,KAAI,SAACmB,EAAYlB,GAEhC,OAEI,6BACI,qBAAI3G,UAAY,qBAAhB,UACI,6BAAI,8CAAiB6H,EAAW7D,UAChC,6BAAI,iDAAoB6D,EAAWf,iBACnC,6BAAI,8CAAiBe,EAAW9C,cAChC,6BAAI,2CAAc8C,EAAW/C,eALzB6B,MAWf,mBAAG3G,UAAY,OAAf,gDAvB6B4D,EAAQY,OAHtD,WCiCOsD,EArDM,SAACvH,GAEkBA,EAA7ByF,WAAP,IAAmB+B,EAAiBxH,EAAjBwH,cAEbC,EAAU,uCAAG,WAAOjH,GAAP,uBAAAC,EAAA,yDACfD,EAAME,iBADS,cAGMF,EAAMyB,OAHZ,GAGRwB,EAHQ,KAGFC,EAHE,MAKZD,EAAKvB,QAASwB,EAAKxB,MALP,wBAMLwF,EAAa,CACfjE,KAAMA,EAAKvB,MACXwB,KAAMA,EAAKxB,MACXyF,UAAU,GATH,kBAaYvE,EAAesE,GAb3B,OAaLvG,EAbK,OAcXqG,EAAcrG,GAdH,kDAkBPsB,QAAQC,MAAR,MAlBO,gCAsBXpB,MAAM,gCAtBK,0DAAH,sDA0BZ,OACI,mCACA,sBAAK7B,UAAY,cAAjB,UACA,oBAAIA,UAAY,qBAAhB,6BACA,uBAAMA,UAAY,cAAcoC,SAAY4F,EAA5C,UACI,sBAAKhI,UAAY,KAAjB,UACI,uBAAOA,UAAY,KAAnB,mBACA,uBAAOqC,KAAM,YAGjB,sBAAKrC,UAAY,KAAjB,UACI,uBAAOA,UAAY,KAAnB,mBACA,uBAAOqC,KAAM,YAGjB,wBAAQrC,UAAY,YAAYqC,KAAM,SAAtC,6BCgDD8F,EAzFH,WAER,MAAkC3H,mBAASL,KAA3C,mBAAOU,EAAP,KAAiBD,EAAjB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOsF,EAAP,KAAoBnF,EAApB,KAEA,EAAoCH,mBAAS,IAA7C,mBAAOuF,EAAP,KAAmBmB,EAAnB,KACA,EAAoC1G,qBAApC,mBAAOwF,EAAP,KAAmB+B,EAAnB,KAwBA,OAtBAtB,oBAAS,sBAAE,4BAAAzF,EAAA,0DACHH,EADG,0CAGoBiC,IAHpB,OAGOkC,EAHP,OAKCrE,EAAeqE,EAAKxD,UALrB,gDAQCwB,QAAQC,MAAR,MARD,yDAWR,CAACpC,IAEJ4F,oBAAS,sBAAG,4BAAAzF,EAAA,sEAEoBoC,IAFpB,OAEFgF,EAFE,OAIRlB,EAAckB,GAJN,2CAMT,IAKC,mCACA,eAAC,IAAD,WAEA,sBAAKpI,UAAY,OAAjB,UACI,sBAAKA,UAAY,aAAjB,UACI,cAAC,IAAD,CAAMA,UAAY,QAAQgH,GAAK,IAA/B,kBACA,cAAC,IAAD,CAAMhH,UAAY,QAAQgH,GAAK,YAA/B,sBACA,cAAC,IAAD,CAAMhH,UAAY,QAAQgH,GAAK,cAA/B,yBACA,cAAC,IAAD,CAAMhH,UAAY,QAAQgH,GAAK,cAA/B,2BAEJ,sBAAKhH,UAAY,SAAjB,UACOa,EAAkF,KAAtE,cAAC,EAAD,CAAUA,SAAYA,EAAUD,cAAiBA,IAC7DC,EAAgH,KAApG,cAAC,EAAD,CAAOA,SAAYA,EAAUD,cAAiBA,EAAeD,eAAkBA,IAE7FE,EAAW,wBAAQb,UAAY,MAAM4G,QAAW,WR9C7DxG,aAAaiI,WAAW,SQgDRzH,EAAc,IACdD,EAAe,IACfkB,MAAM,6BACNK,SAASoG,OAAO,MALR,sBAMW,WAK3B,+BAEI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAApB,SACA,cAAE,EAAF,MAKA,cAAC,IAAD,CAAOA,KAAO,YAAd,SACI,cAAC,EAAD,MAIJ,eAAC,IAAD,CAAOA,KAAO,cAAd,UACI,cAAC,EAAD,CAAcxC,WAAcA,EAAY+B,cAAiBA,IACzD,cAAC,EAAD,CAAYlH,SAAYA,EAAUiF,YAAeA,EAAaC,WAAcA,EAAYC,WAAcA,EAAY+B,cAAiBA,OAGvI,cAAC,IAAD,CAAOS,KAAO,cAAd,SACI,cAAC,EAAD,CAAY3H,SAAYA,EAAUkF,WAAcA,EAAYmB,cAAiBA,iBClFrGuB,IAASC,OAED,cAAC,EAAD,IAEJC,SAASC,eAAe,U","file":"static/js/main.8916a8f2.chunk.js","sourcesContent":["\nconst Home = () => {\n\n    return(\n        <>\n        <div className = 'home'>\n            <div className = 'hometitle'>\n                <h1>FitnessTrac.kr</h1>\n            </div>\n\n            <div className = 'homeimage'>\n                <img src = 'https://clipartix.com/wp-content/uploads/2016/12/Workout-free-fitness-and-exercise-clipart-clip-art-pictures-graphics-4-3.png' alt = 'logo' />\n            </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default Home","export const storeToken = (token) =>{\n    localStorage.setItem('token', token);\n}\n\nexport const getToken = () => {\n    return localStorage.getItem('token')\n}\n\nexport const clearToken = () => {\n    localStorage.removeItem('token');\n}\n","import React, {useState} from 'react'\nimport {storeToken} from '../auth'\n\n\nconst Login = (props) => {\n\n    const [user, setUser] = useState('');\n    const {setCurrentUser, loggedIn, setIsLoggedIn} = props;\n\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/login', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: user.username,\n                password: user.password\n            })\n        })\n\n        const result = await response.json();\n \n        if (result.user){\n            alert(result.message);\n            setIsLoggedIn(result.token);\n            storeToken(result.token);\n            window.location.reload()\n        }else{\n            alert(result.message)\n        }\n    }\n    \n\n    return (\n        <form className = 'formlog' onSubmit = {handleLogin}>\n\n\n            <label className = 'd1'> Log-In: </label>\n            <div className = 'logger'>\n                <input type ='text' className = 'credential1' \n                placeholder = 'username' onChange = {(event) => setUser({...user, username:event.target.value})} />\n\n                <input type ='password' className = 'credential2' \n                placeholder = 'password' onChange = {(event) =>  {setUser({...user, password:event.target.value}); setCurrentUser(user.username) } } />\n                \n                <button className = 'b1' type ='submit'> Sign-in </button>\n            </div>\n        </form>\n    )\n}\n\nexport default Login;","import React, { useState } from 'react';\n\n\n\nconst Register = (props) => {\n    const {loggedIn, setIsLoggedIn} = props;\n    const [user, setUser] = useState('')\n    \n    const handleRegister = async (event) => {\n        event.preventDefault();\n      const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            username: user.username,\n            password: user.password\n        })\n\n    })\n\n        const result = await response.json();\n\n\n        if (result.token){\n                alert('Thank you for signing up!');\n                setIsLoggedIn(result.token)\n            }else{\n                alert(result.message)\n            }\n    }\n\n\n    return(\n        <form className = 'formreg' onSubmit = {handleRegister} >\n\n            <label className = 'd2'> Register: </label>\n            <div className = 'registration'>\n                <input type ='text' className = 'credential1' \n                placeholder = 'username' onChange = {(event) => setUser({...user, username:event.target.value})} />\n\n                <input type ='password' className = 'credential2' \n                placeholder = 'password'  onChange = {(event) => setUser({...user, password:event.target.value})}/>\n                \n                <button className = 'b1' type ='submit'> Create </button>\n            </div>\n        </form>\n    )\n\n    }\nexport default Register","import { getToken} from \"../auth\";\nconst aToken = getToken();\nconst BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api/' ;\n\nexport const meUserData = async () => {\n\n    try{\n        const response = await fetch(`${BASE_URL}users/me`,{\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${aToken}`\n              }\n        });\n\n        const meData = await response.json();\n        return meData\n\n    }catch (error){\n        console.error(error);\n    }\n\n}\n\nexport const userRoutines = async (username) => {\n    try{\n        const response = await fetch (`${BASE_URL}users/${username}/routines`, {\n            headers: {\n                'Content-Type': 'application/json',\n              }\n        });\n\n        const userData = await response.json();\n\n        return userData\n        \n    }catch (error){\n        console.error(error)\n    }\n}\n\nexport const allActivities = async () => {\n\n    try{\n\n        const response = fetch(`${BASE_URL}activities`, {\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          });\n\n          const activitiesData = await (await response).json();\n          return activitiesData\n\n    }catch (error){\n        console.error(error)\n    }\n\n\n}\n\nexport const createActivity = async (activity) => {\n    try{\n        const response = await fetch(`${BASE_URL}activities`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${aToken}`\n            },\n            body: JSON.stringify(activity) \n            \n        });\n        const activityData = await response.json();\n\n        return activityData\n\n    }catch (error){\n        console.error(error)\n    }\n}\n\nexport const allRoutines = async () => {\n    try{\n\n        const response = await fetch(`${BASE_URL}routines`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n              }\n        });\n\n        const allRotuinesData = await response.json();\n\n        return allRotuinesData\n\n    }catch (error){\n        console.error(error);\n    }\n}\n\nexport const createRoutines = async (routine) => {\n    try{\n\n        const response = await fetch(`${BASE_URL}routines`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${aToken}`,\n            },\n            body: JSON.stringify(routine),\n          });\n          const createRoutinesData = await response.json();\n      \n          return createRoutinesData;\n\n    }catch (error){\n        console.error(error)\n    }\n}\n\n\n\nexport const updateRoutine = async (name, goal, routineId) => {\n    let fields = {}\n\n    let editName = prompt('Name:', name);\n    \n    let editGoal = prompt('Goal:', goal);\n\n    if (editName){\n        fields.name = editName;\n    }\n    if (editGoal){\n        fields.goal = editGoal;\n    }\n\n    try{\n        const response = await fetch(`${BASE_URL}routines/${routineId}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${aToken}`,\n            },\n            body: JSON.stringify(fields),\n        });\n    }catch(error){\n        console.error(error)\n        alert(error)\n    }\n}\n\nexport const deleteRoutine = async (id) => {\n    try {\n        const response = await fetch (`${BASE_URL}routines/${id}`, {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${aToken}`,\n            },\n        });\n\n    } catch(error){\n        console.error(error);\n        alert(error);\n    }\n}\n\nexport const addActivityToRoutine = async ( routineId, activityIdR, countR, durationR) =>{\n    \n    try{\n\n        const response = await fetch (`${BASE_URL}routines/${routineId}/activities`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                activityId: activityIdR,\n                count: countR,\n                duration: durationR,\n              })\n        });\n\n        const data = await response.json();\n        return data;\n    }catch(error){\n        console.error(error);\n    }\n\n}\n\n\nexport const updateRoutineActivity = async (id, count, duration) => {\n    let fields = {};\n    let newCount = prompt('Count', count);\n    let newDuration = prompt('Duration', duration);\n   \n    if (newCount){\n        fields.count = newCount;\n    }\n    if (newDuration){\n        fields.duration = newDuration;\n    }\n\n    try{\n\n        const response = await fetch(`${BASE_URL}/routine_activities/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${aToken}`,\n            },\n            body: JSON.stringify(fields),\n        });\n\n        const data = await response.json();\n        return data\n    } catch (error){\n        console.error(error);\n        alert(error);\n    }\n}\n\nexport const deleteRoutineActivity = async (id) => {\n\n    try {\n        const response = await fetch(`${BASE_URL}/routine_activities/${id}`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${aToken}`,\n          },\n        });\n        const data = await response.json();\n        return data;\n      } catch (error) {\n        alert(error);\n      }\n\n}","import React, {useState, useEffect} from 'react'\nimport {Redirect, Link} from 'react-router-dom'\nimport {userRoutines, updateRoutine, deleteRoutine, addActivityToRoutine, updateRoutineActivity, deleteRoutineActivity} from '../api'\nconst MyRoutines = (props) => {\n\n    const [theUserRoutines, setTheUserRoutines] = useState([]);\n    const [activityId, setActivityId] = useState();\n    const [durationCount, setDurationCount] = useState();\n    const [routineId, setRoutineId] = useState();\n\n    const [rend, setRend] = useState(1)\n\n    const {loggedIn, currentUser, activities, newRoutine} = props;\n\n    const handleUpdate = async (name, goal, id) => {\n        try{\n            const routines = await updateRoutine(name, goal, id);\n            setRend(rend + 1)\n        } catch(error){\n            console.error\n        }\n    }\n\n\n    const handleDeleteRoutine = async (id) => {\n        try{\n            const routines = await deleteRoutine(id);\n            setRend(rend + 1)\n        }catch (error){\n            console.error(error)\n        }\n    }\n\n    const handleActivityAdd = async (event) =>{\n\n    if (durationCount == undefined ){\n        return alert('Count and Duration required')\n    }\n\n        const {duration, count} = durationCount;\n   \n\n        try{\n\n            const response = await addActivityToRoutine(routineId, activityId, count, duration);\n\n \n            if(!response.id){\n                return alert('Error')\n            }\n\n            setRend(rend + 1)\n            setRoutineId(null);\n            setDurationCount(null);\n            setActivityId(null)\n\n        } catch(error){\n            console.error(error)\n        }\n    }\n\n    const handleActivityUpdate = async (routineId, count, duration) => {\n        try{\n            const routines = await updateRoutineActivity(routineId, count, duration);\n            setRend(rend + 1)\n  \n        }catch (error){\n            console.error(error);\n        }\n    }\n\n    const handleActivityDelete = async (id) => {\n        try{\n            const activity = await deleteRoutineActivity(id);\n            setRend(rend + 1)\n \n        } catch (error){\n            console.error(error);\n        }\n    }\n\n    const getUserRoutines = async () => {\n        if(!currentUser || !activities){\n            return;\n        }\n        try{\n            const routines = await userRoutines(currentUser);\n\n            setTheUserRoutines(routines);\n\n        }catch (error) {\n            console.error(error);\n        }\n    }\n    \n\n\n    useEffect(() => {\n        getUserRoutines()\n\n    }, [currentUser, rend, newRoutine])\n    \n\n\n    if(!loggedIn){\n        alert('Log in to view My Routines')\n        return <Redirect to ='/' />;\n    }else{\n\n    return(\n        <>\n\n        <h1 className = 'myroutinestitle'>My Routines</h1>\n\n        <div className = 'myroutines'>\n        {theUserRoutines ? (\n            theUserRoutines.map((routine, index) => {\n                return (\n                    <div className = 'myroutinecell' key = {index}>\n                        <h2 className = 't1'>{routine.name}</h2>\n                        <h3 className = 't2'>{routine.goal}</h3>\n\n                <button type = 'button' className = 'edit' onClick = {() => handleUpdate(routine.name, routine.goal, routine.id)}>\n                    Edit Routine Name or Goal\n                </button>\n\n                <button type ='button' className = 'delete' \n                onClick = {() => handleDeleteRoutine(routine.id)}\n                >\n                    Delete Routine\n                </button>\n\n\n                {routine.activities[0] ? (\n                    routine.activities.map((activity, index) => {\n                        return(\n                            <ul className = 'details' key={index}>\n                                <li> <span>Activity: {activity.name}</span> </li>\n                                <li><span>ID: {activity.routineActivityId }</span></li>\n                                <li><span>Description: {activity.description} </span></li>\n                                <li><span> Duration: {activity.duration}</span> </li>\n                                <li><span>Count: {activity.count} </span></li>\n\n                                <button className = 'edit' type = 'button' onClick = {() =>handleActivityUpdate(activity.routineActivityId, activity.duration, activity.count)}>\n                                    Update Duration or Count\n                                </button>\n\n                                <button className = 'delete' type = 'button' onClick = {() => handleActivityDelete(activity.routineActivityId)}>\n                                    Delete Routine Activity\n                                </button>\n\n                            </ul>\n                        )\n                    })\n                ) : <h3 className = 't2 none'>No activities for this routine</h3>}\n\n\n                <form className = 'foradd' >\n                    \n                    <label className = 't3' >Add Routine Activity:</label>\n                    <select name ='Activities' id = 'selectactivity' \n                    onChange = {(event) => {setRoutineId(routine.id); setActivityId(event.target.value); return}}>\n                    \n                        \n                        <option className = 'dropdown'  value ='null'>Select Activity</option>\n                        {\n                            activities.map((activity, index) => {\n                                return (\n                                    <option key = {index} value = {activity.id}>\n                                        {activity.name}\n                                    </option>\n                                )\n                            })\n                        }\n\n                    </select>\n\n\n                    \n                        <div className = 'forcount'>\n                            <label className = 't4'>Count:</label>\n                            <input className = 'counter' type = 'number' min = '1' placeholder ='Count' \n                            onChange = {(event) => setDurationCount({...durationCount, count: event.target.value})}\n                            />\n                        </div>\n\n                        <div className = 'forduration'>\n                            <label className = 't4'>Duration:</label>\n                            <input className = 'duration' type = 'number' min = '1' placeholder = 'Duration'\n                            onChange = {(event) => setDurationCount({...durationCount, duration: event.target.value})}\n                            />\n                        </div>\n                    \n                        <button className = 'addroutine' type = 'button' onClick = {(event) => handleActivityAdd(event)}>Submit</button>\n                  \n                </form>\n                </div>\n                \n                )\n            })\n        ): <h2 className = 'none'>No routines made by you</h2>}\n\n        </div>\n\n        </>\n    )\n}\n}\nexport default MyRoutines;","import {useEffect, useState} from 'react'\nimport {allActivities, createActivity} from '../api'\n\nconst Activities = (props) => {\n    const {loggedIn, activities, setActivities } = props;\n    const [addActivity, setAddActivity] = useState();\n\n    const handleCreateActivity = async (event) =>{\n        try{\n            event.preventDefault()\n            const creation = await createActivity(addActivity);\n\n            if (creation.id){\n                setActivities([creation, ...activities])\n            }else{\n                alert(creation.message)\n            }\n\n        }catch (error) {\n            console.error(error)\n        }\n    }\n\n\n    return (\n        <> \n            <h1 className = 'activitiestitle'>Activities</h1>\n           \n            \n            <div className = 'activities'>\n                <div className = 'creationactivity'>\n                \n                {loggedIn ?\n                    <>\n                    <h2 className = 'tocreate'>Create Activity</h2>\n                    <form className = 'activityform' onSubmit = {handleCreateActivity}>\n                        \n                        <div className = 's1'>\n                        <label>Activity:</label>\n                        <input ctype = 'text' className = 'activityname' \n                        onChange = { (event) => {  setAddActivity({...addActivity, name: event.target.value})  }  }/>\n                        </div>\n                        \n                        <div className = 's2'>\n                        <label>Description:</label>\n                        <input type = 'text' className = 'activitydescription' \n                        onChange = { (event) => {  setAddActivity({...addActivity, description: event.target.value})  }  }/>\n                        </div>\n\n                        <button className = 'activitybutton' type = 'submit' > Submit </button>\n\n                    </form>\n                    </>\n                    : null}\n                </div>\n\n\n            \n\n            {activities.map(activity => {\n                return (\n                    <div className ='activitycell' key = {activity.id}> \n                    \n                    <h2 className = 'z1'> Activty: {activity.name} </h2>\n                    <h3 className = 'z2'>Description:  {activity.description} </h3>\n\n                    </div>\n                )\n            })}\n        \n        </div>\n\n        </>\n    )\n}\n\nexport default Activities","import React, {useState, useEffect} from 'react'\nimport {allRoutines} from '../api'\n\nconst Routines = () => {\n\n    const [gotRoutines, setGotRoutines] = useState([]);\n      \n    const getAllRoutines = async () => {\n        try{\n\n            const routines = await allRoutines();\n            setGotRoutines(routines);\n\n\n        }catch (error){\n            console.error(error)\n        }\n    }\n\n    useEffect( getAllRoutines, [])\n\n    return(\n        <>\n        \n        <h1 className = 'routinestitle'> Routines </h1>\n        <div className = 'routines'>\n        {gotRoutines.map(routine => {\n            return(\n                <div className = 'routinecell' key = {routine.id}>\n                    <h2 className = 'a1'> Routine: {routine.name} </h2>\n                    <h3 className = 'a2'> Goal: {routine.goal} </h3>\n                    <h4 className = 'a3'>Creator: {routine.creatorName} </h4>\n\n                <div className = 'activityinfo'>\n                    {routine.activities[0] ? \n                    \n                    routine.activities.map((anActivity, index) => {\n\n                        return(\n                            \n                            <h5  key = {index}> \n                                <ul className = 'creatorsactivities'>\n                                    <li><span>Activity: {anActivity.name}</span></li>\n                                    <li><span>Description: {anActivity.description}</span></li>\n                                    <li><span>Duration: {anActivity.duration}</span></li>\n                                    <li><span>Count: {anActivity.count}</span></li>\n                                </ul>\n\n                            </h5>\n                           \n                        )\n                    }) : <p className = 'none'>No activities for this routine</p>\n                    \n                         \n                    }\n                </div>\n\n                </div>\n            )\n        })};\n        \n        </div>\n        </>\n    )\n}\n\nexport default Routines","import React, {useState, useEffect} from 'react'\n\nimport {createRoutines, allRoutines} from '../api'\n\n\nconst MakeRoutines = (props) =>{\n\n    const {newRoutine, setNewRoutine} = props\n\n    const handleMake = async (event) => {\n        event.preventDefault();\n\n        const [name, goal] = event.target;\n\n        if(name.value && goal.value){\n            const addRoutine = {\n                name: name.value,\n                goal: goal.value,\n                isPublic: true\n            };\n\n            try{\n            const response = await createRoutines(addRoutine);\n            setNewRoutine(response);\n            // setNewRoutine([response, ...newRoutine]);\n\n            } catch (error){\n                console.error(error)\n            }\n\n        }else{\n            alert('All fields must be filled in')\n        }\n    }\n\n        return (\n            <>\n            <div className = 'makeroutine'>\n            <h1 className = 'createrotuinetitle'> Create Routine</h1>\n            <form className = 'routineform' onSubmit = {handleMake}>\n                <div className = 'u1'>\n                    <label className = 'r2'>Name:</label>\n                    <input type ='text' />\n                </div>\n\n                <div className = 'u2'>\n                    <label className = 'r2'>Goal:</label>\n                    <input type ='text' />\n                </div>\n\n                <button className = 'createsub' type ='submit'>Submit</button>\n            </form>\n            </div>\n            </>\n        )\n\n}\n\nexport default MakeRoutines","import React, {useState, useEffect} from 'react'\nimport { HashRouter as Router, Route, Link, Switch} from 'react-router-dom'\n\nimport {Home, Login, Register, MyRoutines,Activities, Rotuines, MakeRoutines} from './components'\nimport {getToken, clearToken} from './auth'\n\nimport {meUserData, allActivities} from './api'\n\n\nconst App = () =>{\n    \n    const [loggedIn, setIsLoggedIn] = useState(getToken());\n    const [currentUser, setCurrentUser] = useState('');\n\n    const [activities, setActivities] = useState([]);\n    const [newRoutine, setNewRoutine] = useState();\n\n    useEffect( async() => {\n        if (loggedIn){\n            try{\n                const data = await meUserData();\n\n                setCurrentUser(data.username)\n\n            } catch (error){\n                console.error(error)\n            }\n        }\n    }, [loggedIn])\n\n    useEffect ( async () => {\n                        \n        const getActivities = await allActivities();\n\n        setActivities(getActivities);\n\n    }, [])\n\n\n    return (\n        \n        <>\n        <Router>\n\n        <nav className = 'navi'>\n            <div className = 'essentials'>\n                <Link className = 'links' to = '/'>Home</Link>\n                <Link className = 'links' to = '/routines'>Routines</Link>\n                <Link className = 'links' to = '/myroutines'>My Routines</Link>\n                <Link className = 'links' to = '/activities'>Activities</Link>\n            </div>\n            <div className = 'logreg'>\n                { !loggedIn ? (<Register loggedIn = {loggedIn} setIsLoggedIn = {setIsLoggedIn} />) : null}\n                { !loggedIn ? (<Login loggedIn = {loggedIn} setIsLoggedIn = {setIsLoggedIn} setCurrentUser = {setCurrentUser}/> ): null}\n                \n                {loggedIn ? <button className = 'off' onClick = {() => {\n                    clearToken();\n                    setIsLoggedIn('');\n                    setCurrentUser('');\n                    alert('You have been logged out!')\n                    location.assign('/')\n                }}> Log-out</button> : null}\n            </div>\n\n        </nav>\n         \n            <main>\n                \n                <Switch>\n\n                    <Route exact path = '/'> \n                    < Home /> \n                    \n                    \n                    </Route>\n\n                    <Route path = '/routines'>\n                        <Rotuines />\n                    </Route>\n\n\n                    <Route path = '/myroutines'>\n                        <MakeRoutines newRoutine = {newRoutine} setNewRoutine = {setNewRoutine}/>\n                        <MyRoutines loggedIn = {loggedIn} currentUser = {currentUser} activities = {activities} newRoutine = {newRoutine} setNewRoutine = {setNewRoutine}/>\n                    </Route>\n                    \n                    <Route path = '/activities'>\n                        <Activities loggedIn = {loggedIn} activities = {activities} setActivities = {setActivities}/>\n                    </Route>\n\n                </Switch>\n            </main>  \n        </Router>\n        </>\n    )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './app'\n\nReactDOM.render(\n\n        <App />,\n\n    document.getElementById('app')\n)"],"sourceRoot":""}